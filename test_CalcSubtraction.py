# ********RoostGPT********
"""
Test generated by RoostGPT for test pushTest using AI Type Open AI and AI Model gpt-4

ROOST_METHOD_HASH=subtraction_68d9a9a59f
ROOST_METHOD_SIG_HASH=subtraction_c085e74db2

Scenario 1: Testing subtraction of two positive numbers
Details:
  TestName: test_subtraction_of_positive_numbers
  Description: This test is intended to verify the subtraction of two positive numbers. 
Execution:
  Arrange: Initialize two positive numbers, num1 and num2.
  Act: Invoke the subtraction function with num1 and num2 as parameters.
  Assert: Check if the result is equal to the difference of num1 and num2.
Validation:
  Rationalize: The subtraction function is expected to correctly compute the difference between two positive numbers. This test verifies this requirement.

Scenario 2: Testing subtraction of two negative numbers
Details:
  TestName: test_subtraction_of_negative_numbers
  Description: This test is intended to verify the subtraction of two negative numbers.
Execution:
  Arrange: Initialize two negative numbers, num1 and num2.
  Act: Invoke the subtraction function with num1 and num2 as parameters.
  Assert: Check if the result is equal to the difference of num1 and num2.
Validation:
  Rationalize: The subtraction function is expected to correctly compute the difference between two negative numbers. This test verifies this requirement.

Scenario 3: Testing subtraction of a positive and a negative number
Details:
  TestName: test_subtraction_of_positive_and_negative_numbers
  Description: This test is intended to verify the subtraction of a positive number and a negative number.
Execution:
  Arrange: Initialize a positive number as num1 and a negative number as num2.
  Act: Invoke the subtraction function with num1 and num2 as parameters.
  Assert: Check if the result is equal to the difference of num1 and num2.
Validation:
  Rationalize: The subtraction function is expected to correctly compute the difference between a positive number and a negative number. This test verifies this requirement.

Scenario 4: Testing subtraction of zero and a number
Details:
  TestName: test_subtraction_of_zero_and_a_number
  Description: This test is intended to verify the subtraction of zero and a number.
Execution:
  Arrange: Initialize zero as num1 and any number as num2.
  Act: Invoke the subtraction function with num1 and num2 as parameters.
  Assert: Check if the result is equal to the difference of num1 and num2.
Validation:
  Rationalize: The subtraction function is expected to correctly compute the difference between zero and any number. This test verifies this requirement.

Scenario 5: Testing subtraction of two floating numbers
Details:
  TestName: test_subtraction_of_floating_numbers
  Description: This test is intended to verify the subtraction of two floating point numbers.
Execution:
  Arrange: Initialize two floating point numbers, num1 and num2.
  Act: Invoke the subtraction function with num1 and num2 as parameters.
  Assert: Check if the result is equal to the difference of num1 and num2.
Validation:
  Rationalize: The subtraction function is expected to correctly compute the difference between two floating point numbers. This test verifies this requirement.
"""

# ********RoostGPT********
import pytest
from calc import subtraction

class Test_CalcSubtraction:

    def test_subtraction_of_positive_numbers(self):
        # Arrange
        num1 = 10
        num2 = 5

        # Act
        result = subtraction(num1, num2)

        # Assert
        assert result == 5, "The subtraction of two positive numbers is incorrect"

    def test_subtraction_of_negative_numbers(self):
        # Arrange
        num1 = -10
        num2 = -5

        # Act
        result = subtraction(num1, num2)

        # Assert
        assert result == -5, "The subtraction of two negative numbers is incorrect"

    def test_subtraction_of_positive_and_negative_numbers(self):
        # Arrange
        num1 = 10
        num2 = -5

        # Act
        result = subtraction(num1, num2)

        # Assert
        assert result == 15, "The subtraction of a positive and a negative number is incorrect"

    def test_subtraction_of_zero_and_a_number(self):
        # Arrange
        num1 = 0
        num2 = 5

        # Act
        result = subtraction(num1, num2)

        # Assert
        assert result == -5, "The subtraction of zero and a number is incorrect"

    def test_subtraction_of_floating_numbers(self):
        # Arrange
        num1 = 10.5
        num2 = 5.2

        # Act
        result = subtraction(num1, num2)

        # Assert
        assert result == 5.3, "The subtraction of two floating point numbers is incorrect"
